#pragma checksum "C:\Users\brand\Desktop\AttireProject\attire_uno\AttireApp\AttireApp\AttireApp.Shared\ForecastPage.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "40131FFB6A08418687D2C56ABF55ADE9AAB4FCE38241F1F231BA6D37FDB27A7E"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AttireApp
{
    partial class ForecastPage : 
        global::Microsoft.UI.Xaml.Controls.Page, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Microsoft_UI_Xaml_Controls_Image_Source(global::Microsoft.UI.Xaml.Controls.Image obj, global::Microsoft.UI.Xaml.Media.ImageSource value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Microsoft.UI.Xaml.Media.ImageSource) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Microsoft.UI.Xaml.Media.ImageSource), targetNullValue);
                }
                obj.Source = value;
            }
            public static void Set_Microsoft_UI_Xaml_Documents_Run_Text(global::Microsoft.UI.Xaml.Documents.Run obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class ForecastPage_obj1_Bindings :
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            IForecastPage_Bindings
        {
            private global::AttireApp.ForecastPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Microsoft.UI.Xaml.Controls.Image obj3;
            private global::Microsoft.UI.Xaml.Documents.Run obj4;
            private global::Microsoft.UI.Xaml.Documents.Run obj5;
            private global::Microsoft.UI.Xaml.Documents.Run obj6;
            private global::Microsoft.UI.Xaml.Controls.Image obj7;
            private global::Microsoft.UI.Xaml.Documents.Run obj8;
            private global::Microsoft.UI.Xaml.Documents.Run obj9;
            private global::Microsoft.UI.Xaml.Documents.Run obj10;
            private global::Microsoft.UI.Xaml.Controls.Image obj11;
            private global::Microsoft.UI.Xaml.Documents.Run obj12;
            private global::Microsoft.UI.Xaml.Documents.Run obj13;
            private global::Microsoft.UI.Xaml.Documents.Run obj14;
            private global::Microsoft.UI.Xaml.Controls.Image obj15;
            private global::Microsoft.UI.Xaml.Documents.Run obj16;
            private global::Microsoft.UI.Xaml.Documents.Run obj17;
            private global::Microsoft.UI.Xaml.Documents.Run obj18;
            private global::Microsoft.UI.Xaml.Controls.Image obj19;
            private global::Microsoft.UI.Xaml.Documents.Run obj20;
            private global::Microsoft.UI.Xaml.Documents.Run obj21;
            private global::Microsoft.UI.Xaml.Documents.Run obj22;
            private global::Microsoft.UI.Xaml.Controls.Image obj23;
            private global::Microsoft.UI.Xaml.Documents.Run obj24;
            private global::Microsoft.UI.Xaml.Documents.Run obj25;
            private global::Microsoft.UI.Xaml.Documents.Run obj26;
            private global::Microsoft.UI.Xaml.Documents.Run obj27;
            private global::Microsoft.UI.Xaml.Documents.Run obj28;
            private global::Microsoft.UI.Xaml.Documents.Run obj29;
            private global::Microsoft.UI.Xaml.Documents.Run obj30;
            private global::Microsoft.UI.Xaml.Documents.Run obj31;
            private global::Microsoft.UI.Xaml.Documents.Run obj32;
            private global::Microsoft.UI.Xaml.Documents.Run obj33;
            private global::Microsoft.UI.Xaml.Documents.Run obj34;
            private global::Microsoft.UI.Xaml.Documents.Run obj35;
            private global::Microsoft.UI.Xaml.Documents.Run obj36;
            private global::Microsoft.UI.Xaml.Documents.Run obj37;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj3SourceDisabled = false;
            private static bool isobj4TextDisabled = false;
            private static bool isobj5TextDisabled = false;
            private static bool isobj6TextDisabled = false;
            private static bool isobj7SourceDisabled = false;
            private static bool isobj8TextDisabled = false;
            private static bool isobj9TextDisabled = false;
            private static bool isobj10TextDisabled = false;
            private static bool isobj11SourceDisabled = false;
            private static bool isobj12TextDisabled = false;
            private static bool isobj13TextDisabled = false;
            private static bool isobj14TextDisabled = false;
            private static bool isobj15SourceDisabled = false;
            private static bool isobj16TextDisabled = false;
            private static bool isobj17TextDisabled = false;
            private static bool isobj18TextDisabled = false;
            private static bool isobj19SourceDisabled = false;
            private static bool isobj20TextDisabled = false;
            private static bool isobj21TextDisabled = false;
            private static bool isobj22TextDisabled = false;
            private static bool isobj23SourceDisabled = false;
            private static bool isobj24TextDisabled = false;
            private static bool isobj25TextDisabled = false;
            private static bool isobj26TextDisabled = false;
            private static bool isobj27TextDisabled = false;
            private static bool isobj28TextDisabled = false;
            private static bool isobj29TextDisabled = false;
            private static bool isobj30TextDisabled = false;
            private static bool isobj31TextDisabled = false;
            private static bool isobj32TextDisabled = false;
            private static bool isobj33TextDisabled = false;
            private static bool isobj34TextDisabled = false;
            private static bool isobj35TextDisabled = false;
            private static bool isobj36TextDisabled = false;
            private static bool isobj37TextDisabled = false;

            private ForecastPage_obj1_BindingsTracking bindingsTracking;

            public ForecastPage_obj1_Bindings()
            {
                this.bindingsTracking = new ForecastPage_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 197 && columnNumber == 32)
                {
                    isobj3SourceDisabled = true;
                }
                else if (lineNumber == 200 && columnNumber == 30)
                {
                    isobj4TextDisabled = true;
                }
                else if (lineNumber == 202 && columnNumber == 30)
                {
                    isobj5TextDisabled = true;
                }
                else if (lineNumber == 194 && columnNumber == 30)
                {
                    isobj6TextDisabled = true;
                }
                else if (lineNumber == 176 && columnNumber == 32)
                {
                    isobj7SourceDisabled = true;
                }
                else if (lineNumber == 179 && columnNumber == 30)
                {
                    isobj8TextDisabled = true;
                }
                else if (lineNumber == 181 && columnNumber == 30)
                {
                    isobj9TextDisabled = true;
                }
                else if (lineNumber == 173 && columnNumber == 30)
                {
                    isobj10TextDisabled = true;
                }
                else if (lineNumber == 155 && columnNumber == 32)
                {
                    isobj11SourceDisabled = true;
                }
                else if (lineNumber == 158 && columnNumber == 30)
                {
                    isobj12TextDisabled = true;
                }
                else if (lineNumber == 160 && columnNumber == 30)
                {
                    isobj13TextDisabled = true;
                }
                else if (lineNumber == 152 && columnNumber == 30)
                {
                    isobj14TextDisabled = true;
                }
                else if (lineNumber == 134 && columnNumber == 32)
                {
                    isobj15SourceDisabled = true;
                }
                else if (lineNumber == 137 && columnNumber == 30)
                {
                    isobj16TextDisabled = true;
                }
                else if (lineNumber == 139 && columnNumber == 30)
                {
                    isobj17TextDisabled = true;
                }
                else if (lineNumber == 131 && columnNumber == 30)
                {
                    isobj18TextDisabled = true;
                }
                else if (lineNumber == 113 && columnNumber == 32)
                {
                    isobj19SourceDisabled = true;
                }
                else if (lineNumber == 116 && columnNumber == 30)
                {
                    isobj20TextDisabled = true;
                }
                else if (lineNumber == 118 && columnNumber == 30)
                {
                    isobj21TextDisabled = true;
                }
                else if (lineNumber == 110 && columnNumber == 30)
                {
                    isobj22TextDisabled = true;
                }
                else if (lineNumber == 91 && columnNumber == 32)
                {
                    isobj23SourceDisabled = true;
                }
                else if (lineNumber == 94 && columnNumber == 30)
                {
                    isobj24TextDisabled = true;
                }
                else if (lineNumber == 96 && columnNumber == 30)
                {
                    isobj25TextDisabled = true;
                }
                else if (lineNumber == 88 && columnNumber == 30)
                {
                    isobj26TextDisabled = true;
                }
                else if (lineNumber == 73 && columnNumber == 26)
                {
                    isobj27TextDisabled = true;
                }
                else if (lineNumber == 75 && columnNumber == 26)
                {
                    isobj28TextDisabled = true;
                }
                else if (lineNumber == 66 && columnNumber == 26)
                {
                    isobj29TextDisabled = true;
                }
                else if (lineNumber == 68 && columnNumber == 26)
                {
                    isobj30TextDisabled = true;
                }
                else if (lineNumber == 61 && columnNumber == 22)
                {
                    isobj31TextDisabled = true;
                }
                else if (lineNumber == 55 && columnNumber == 22)
                {
                    isobj32TextDisabled = true;
                }
                else if (lineNumber == 52 && columnNumber == 22)
                {
                    isobj33TextDisabled = true;
                }
                else if (lineNumber == 43 && columnNumber == 22)
                {
                    isobj34TextDisabled = true;
                }
                else if (lineNumber == 45 && columnNumber == 22)
                {
                    isobj35TextDisabled = true;
                }
                else if (lineNumber == 36 && columnNumber == 22)
                {
                    isobj36TextDisabled = true;
                }
                else if (lineNumber == 37 && columnNumber == 22)
                {
                    isobj37TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 3: // ForecastPage.xaml line 197
                        this.obj3 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Image>(target);
                        break;
                    case 4: // ForecastPage.xaml line 200
                        this.obj4 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Documents.Run>(target);
                        break;
                    case 5: // ForecastPage.xaml line 202
                        this.obj5 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Documents.Run>(target);
                        break;
                    case 6: // ForecastPage.xaml line 194
                        this.obj6 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Documents.Run>(target);
                        break;
                    case 7: // ForecastPage.xaml line 176
                        this.obj7 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Image>(target);
                        break;
                    case 8: // ForecastPage.xaml line 179
                        this.obj8 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Documents.Run>(target);
                        break;
                    case 9: // ForecastPage.xaml line 181
                        this.obj9 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Documents.Run>(target);
                        break;
                    case 10: // ForecastPage.xaml line 173
                        this.obj10 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Documents.Run>(target);
                        break;
                    case 11: // ForecastPage.xaml line 155
                        this.obj11 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Image>(target);
                        break;
                    case 12: // ForecastPage.xaml line 158
                        this.obj12 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Documents.Run>(target);
                        break;
                    case 13: // ForecastPage.xaml line 160
                        this.obj13 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Documents.Run>(target);
                        break;
                    case 14: // ForecastPage.xaml line 152
                        this.obj14 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Documents.Run>(target);
                        break;
                    case 15: // ForecastPage.xaml line 134
                        this.obj15 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Image>(target);
                        break;
                    case 16: // ForecastPage.xaml line 137
                        this.obj16 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Documents.Run>(target);
                        break;
                    case 17: // ForecastPage.xaml line 139
                        this.obj17 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Documents.Run>(target);
                        break;
                    case 18: // ForecastPage.xaml line 131
                        this.obj18 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Documents.Run>(target);
                        break;
                    case 19: // ForecastPage.xaml line 113
                        this.obj19 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Image>(target);
                        break;
                    case 20: // ForecastPage.xaml line 116
                        this.obj20 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Documents.Run>(target);
                        break;
                    case 21: // ForecastPage.xaml line 118
                        this.obj21 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Documents.Run>(target);
                        break;
                    case 22: // ForecastPage.xaml line 110
                        this.obj22 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Documents.Run>(target);
                        break;
                    case 23: // ForecastPage.xaml line 91
                        this.obj23 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Image>(target);
                        break;
                    case 24: // ForecastPage.xaml line 94
                        this.obj24 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Documents.Run>(target);
                        break;
                    case 25: // ForecastPage.xaml line 96
                        this.obj25 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Documents.Run>(target);
                        break;
                    case 26: // ForecastPage.xaml line 88
                        this.obj26 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Documents.Run>(target);
                        break;
                    case 27: // ForecastPage.xaml line 73
                        this.obj27 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Documents.Run>(target);
                        break;
                    case 28: // ForecastPage.xaml line 75
                        this.obj28 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Documents.Run>(target);
                        break;
                    case 29: // ForecastPage.xaml line 66
                        this.obj29 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Documents.Run>(target);
                        break;
                    case 30: // ForecastPage.xaml line 68
                        this.obj30 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Documents.Run>(target);
                        break;
                    case 31: // ForecastPage.xaml line 61
                        this.obj31 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Documents.Run>(target);
                        break;
                    case 32: // ForecastPage.xaml line 55
                        this.obj32 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Documents.Run>(target);
                        break;
                    case 33: // ForecastPage.xaml line 52
                        this.obj33 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Documents.Run>(target);
                        break;
                    case 34: // ForecastPage.xaml line 43
                        this.obj34 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Documents.Run>(target);
                        break;
                    case 35: // ForecastPage.xaml line 45
                        this.obj35 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Documents.Run>(target);
                        break;
                    case 36: // ForecastPage.xaml line 36
                        this.obj36 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Documents.Run>(target);
                        break;
                    case 37: // ForecastPage.xaml line 37
                        this.obj37 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Documents.Run>(target);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IForecastPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::AttireApp.ForecastPage>(newDataRoot);
                    return true;
                }
                return false;
            }

            public void Activated(object obj, global::Microsoft.UI.Xaml.WindowActivatedEventArgs data)
            {
                this.Initialize();
            }

            public void Loading(global::Microsoft.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::AttireApp.ForecastPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_WeatherDataInfo(obj.WeatherDataInfo, phase);
                    }
                }
                else
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.UpdateFallback_WeatherDataInfo(phase);
                    }
                }
            }
            private void Update_WeatherDataInfo(global::AttireApp.Models.WeatherDataModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_WeatherDataInfo(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_WeatherDataInfo_Forecast(obj.Forecast, phase);
                        this.Update_WeatherDataInfo_Current(obj.Current, phase);
                        this.Update_WeatherDataInfo_Location(obj.Location, phase);
                    }
                }
                else
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.UpdateFallback_WeatherDataInfo_Current(phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.UpdateFallback_WeatherDataInfo_Location(phase);
                    }
                }
            }
            private void Update_WeatherDataInfo_Forecast(global::AttireApp.API.Forecast obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_WeatherDataInfo_Forecast_Forecastday(obj.Forecastday, phase);
                    }
                }
            }
            private void Update_WeatherDataInfo_Forecast_Forecastday(global::System.Collections.Generic.List<global::AttireApp.API.Forecastday> obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_WeatherDataInfo_Forecast_Forecastday_I0(obj[0], phase);
                    }
                }
            }
            private void Update_WeatherDataInfo_Forecast_Forecastday_I0(global::AttireApp.API.Forecastday obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour(obj.Hour, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_WeatherDataInfo_Forecast_Forecastday_I0_Day(obj.Day, phase);
                    }
                }
            }
            private void Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour(global::System.Collections.Generic.List<global::AttireApp.API.Hour> obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I13(obj[13], phase);
                        this.Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I12(obj[12], phase);
                        this.Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I11(obj[11], phase);
                        this.Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I10(obj[10], phase);
                        this.Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I9(obj[9], phase);
                        this.Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I8(obj[8], phase);
                    }
                }
            }
            private void Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I13(global::AttireApp.API.Hour obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I13_Condition(obj.Condition, phase);
                        this.Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I13_TempC(obj.TempC, phase);
                        this.Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I13_TempF(obj.TempF, phase);
                        this.Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I13_Time(obj.Time, phase);
                    }
                }
            }
            private void Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I13_Condition(global::AttireApp.API.Condition obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I13_Condition_Icon(obj.Icon, phase);
                    }
                }
            }
            private void Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I13_Condition_Icon(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // ForecastPage.xaml line 197
                    if (!isobj3SourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Image_Source(this.obj3, (global::Microsoft.UI.Xaml.Media.ImageSource) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Microsoft.UI.Xaml.Media.ImageSource), obj), null);
                    }
                }
            }
            private void Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I13_TempC(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // ForecastPage.xaml line 200
                    if (!isobj4TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Documents_Run_Text(this.obj4, obj.ToString(), null);
                    }
                }
            }
            private void Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I13_TempF(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // ForecastPage.xaml line 202
                    if (!isobj5TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Documents_Run_Text(this.obj5, obj.ToString(), null);
                    }
                }
            }
            private void Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I13_Time(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // ForecastPage.xaml line 194
                    if (!isobj6TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Documents_Run_Text(this.obj6, obj, null);
                    }
                }
            }
            private void Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I12(global::AttireApp.API.Hour obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I12_Condition(obj.Condition, phase);
                        this.Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I12_TempC(obj.TempC, phase);
                        this.Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I12_TempF(obj.TempF, phase);
                        this.Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I12_Time(obj.Time, phase);
                    }
                }
            }
            private void Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I12_Condition(global::AttireApp.API.Condition obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I12_Condition_Icon(obj.Icon, phase);
                    }
                }
            }
            private void Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I12_Condition_Icon(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // ForecastPage.xaml line 176
                    if (!isobj7SourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Image_Source(this.obj7, (global::Microsoft.UI.Xaml.Media.ImageSource) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Microsoft.UI.Xaml.Media.ImageSource), obj), null);
                    }
                }
            }
            private void Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I12_TempC(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // ForecastPage.xaml line 179
                    if (!isobj8TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Documents_Run_Text(this.obj8, obj.ToString(), null);
                    }
                }
            }
            private void Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I12_TempF(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // ForecastPage.xaml line 181
                    if (!isobj9TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Documents_Run_Text(this.obj9, obj.ToString(), null);
                    }
                }
            }
            private void Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I12_Time(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // ForecastPage.xaml line 173
                    if (!isobj10TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Documents_Run_Text(this.obj10, obj, null);
                    }
                }
            }
            private void Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I11(global::AttireApp.API.Hour obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I11_Condition(obj.Condition, phase);
                        this.Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I11_TempC(obj.TempC, phase);
                        this.Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I11_TempF(obj.TempF, phase);
                        this.Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I11_Time(obj.Time, phase);
                    }
                }
            }
            private void Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I11_Condition(global::AttireApp.API.Condition obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I11_Condition_Icon(obj.Icon, phase);
                    }
                }
            }
            private void Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I11_Condition_Icon(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // ForecastPage.xaml line 155
                    if (!isobj11SourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Image_Source(this.obj11, (global::Microsoft.UI.Xaml.Media.ImageSource) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Microsoft.UI.Xaml.Media.ImageSource), obj), null);
                    }
                }
            }
            private void Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I11_TempC(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // ForecastPage.xaml line 158
                    if (!isobj12TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Documents_Run_Text(this.obj12, obj.ToString(), null);
                    }
                }
            }
            private void Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I11_TempF(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // ForecastPage.xaml line 160
                    if (!isobj13TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Documents_Run_Text(this.obj13, obj.ToString(), null);
                    }
                }
            }
            private void Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I11_Time(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // ForecastPage.xaml line 152
                    if (!isobj14TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Documents_Run_Text(this.obj14, obj, null);
                    }
                }
            }
            private void Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I10(global::AttireApp.API.Hour obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I10_Condition(obj.Condition, phase);
                        this.Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I10_TempC(obj.TempC, phase);
                        this.Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I10_TempF(obj.TempF, phase);
                        this.Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I10_Time(obj.Time, phase);
                    }
                }
            }
            private void Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I10_Condition(global::AttireApp.API.Condition obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I10_Condition_Icon(obj.Icon, phase);
                    }
                }
            }
            private void Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I10_Condition_Icon(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // ForecastPage.xaml line 134
                    if (!isobj15SourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Image_Source(this.obj15, (global::Microsoft.UI.Xaml.Media.ImageSource) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Microsoft.UI.Xaml.Media.ImageSource), obj), null);
                    }
                }
            }
            private void Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I10_TempC(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // ForecastPage.xaml line 137
                    if (!isobj16TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Documents_Run_Text(this.obj16, obj.ToString(), null);
                    }
                }
            }
            private void Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I10_TempF(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // ForecastPage.xaml line 139
                    if (!isobj17TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Documents_Run_Text(this.obj17, obj.ToString(), null);
                    }
                }
            }
            private void Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I10_Time(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // ForecastPage.xaml line 131
                    if (!isobj18TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Documents_Run_Text(this.obj18, obj, null);
                    }
                }
            }
            private void Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I9(global::AttireApp.API.Hour obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I9_Condition(obj.Condition, phase);
                        this.Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I9_TempC(obj.TempC, phase);
                        this.Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I9_TempF(obj.TempF, phase);
                        this.Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I9_Time(obj.Time, phase);
                    }
                }
            }
            private void Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I9_Condition(global::AttireApp.API.Condition obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I9_Condition_Icon(obj.Icon, phase);
                    }
                }
            }
            private void Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I9_Condition_Icon(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // ForecastPage.xaml line 113
                    if (!isobj19SourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Image_Source(this.obj19, (global::Microsoft.UI.Xaml.Media.ImageSource) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Microsoft.UI.Xaml.Media.ImageSource), obj), null);
                    }
                }
            }
            private void Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I9_TempC(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // ForecastPage.xaml line 116
                    if (!isobj20TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Documents_Run_Text(this.obj20, obj.ToString(), null);
                    }
                }
            }
            private void Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I9_TempF(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // ForecastPage.xaml line 118
                    if (!isobj21TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Documents_Run_Text(this.obj21, obj.ToString(), null);
                    }
                }
            }
            private void Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I9_Time(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // ForecastPage.xaml line 110
                    if (!isobj22TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Documents_Run_Text(this.obj22, obj, null);
                    }
                }
            }
            private void Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I8(global::AttireApp.API.Hour obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I8_Condition(obj.Condition, phase);
                        this.Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I8_TempC(obj.TempC, phase);
                        this.Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I8_TempF(obj.TempF, phase);
                        this.Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I8_Time(obj.Time, phase);
                    }
                }
            }
            private void Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I8_Condition(global::AttireApp.API.Condition obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I8_Condition_Icon(obj.Icon, phase);
                    }
                }
            }
            private void Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I8_Condition_Icon(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // ForecastPage.xaml line 91
                    if (!isobj23SourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Image_Source(this.obj23, (global::Microsoft.UI.Xaml.Media.ImageSource) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Microsoft.UI.Xaml.Media.ImageSource), obj), null);
                    }
                }
            }
            private void Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I8_TempC(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // ForecastPage.xaml line 94
                    if (!isobj24TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Documents_Run_Text(this.obj24, obj.ToString(), null);
                    }
                }
            }
            private void Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I8_TempF(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // ForecastPage.xaml line 96
                    if (!isobj25TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Documents_Run_Text(this.obj25, obj.ToString(), null);
                    }
                }
            }
            private void Update_WeatherDataInfo_Forecast_Forecastday_I0_Hour_I8_Time(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // ForecastPage.xaml line 88
                    if (!isobj26TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Documents_Run_Text(this.obj26, obj, null);
                    }
                }
            }
            private void Update_WeatherDataInfo_Forecast_Forecastday_I0_Day(global::AttireApp.API.Day obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_WeatherDataInfo_Forecast_Forecastday_I0_Day_MintempC(obj.MintempC, phase);
                        this.Update_WeatherDataInfo_Forecast_Forecastday_I0_Day_MintempF(obj.MintempF, phase);
                        this.Update_WeatherDataInfo_Forecast_Forecastday_I0_Day_MaxtempC(obj.MaxtempC, phase);
                        this.Update_WeatherDataInfo_Forecast_Forecastday_I0_Day_MaxtempF(obj.MaxtempF, phase);
                    }
                }
            }
            private void Update_WeatherDataInfo_Forecast_Forecastday_I0_Day_MintempC(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ForecastPage.xaml line 73
                    if (!isobj27TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Documents_Run_Text(this.obj27, obj.ToString(), null);
                    }
                }
            }
            private void Update_WeatherDataInfo_Forecast_Forecastday_I0_Day_MintempF(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ForecastPage.xaml line 75
                    if (!isobj28TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Documents_Run_Text(this.obj28, obj.ToString(), null);
                    }
                }
            }
            private void Update_WeatherDataInfo_Forecast_Forecastday_I0_Day_MaxtempC(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ForecastPage.xaml line 66
                    if (!isobj29TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Documents_Run_Text(this.obj29, obj.ToString(), null);
                    }
                }
            }
            private void Update_WeatherDataInfo_Forecast_Forecastday_I0_Day_MaxtempF(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ForecastPage.xaml line 68
                    if (!isobj30TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Documents_Run_Text(this.obj30, obj.ToString(), null);
                    }
                }
            }
            private void Update_WeatherDataInfo_Current(global::AttireApp.API.Current obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_WeatherDataInfo_Current_Condition(obj.Condition, phase);
                        this.Update_WeatherDataInfo_Current_LastUpdated(obj.LastUpdated, phase);
                        this.Update_WeatherDataInfo_Current_TempC(obj.TempC, phase);
                        this.Update_WeatherDataInfo_Current_TempF(obj.TempF, phase);
                    }
                }
                else
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.UpdateFallback_WeatherDataInfo_Current_Condition(phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.UpdateFallback_WeatherDataInfo_Current_TempC(phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.UpdateFallback_WeatherDataInfo_Current_TempF(phase);
                    }
                }
            }
            private void Update_WeatherDataInfo_Current_Condition(global::AttireApp.API.Condition obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_WeatherDataInfo_Current_Condition(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_WeatherDataInfo_Current_Condition_Text(obj.Text, phase);
                    }
                }
                else
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.UpdateFallback_WeatherDataInfo_Current_Condition_Text(phase);
                    }
                }
            }
            private void Update_WeatherDataInfo_Current_Condition_Text(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ForecastPage.xaml line 61
                    if (!isobj31TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Documents_Run_Text(this.obj31, obj, null);
                    }
                }
            }
            private void Update_WeatherDataInfo_Location(global::AttireApp.API.Location obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_WeatherDataInfo_Location_Localtime(obj.Localtime, phase);
                        this.Update_WeatherDataInfo_Location_Name(obj.Name, phase);
                        this.Update_WeatherDataInfo_Location_Region(obj.Region, phase);
                    }
                }
                else
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.UpdateFallback_WeatherDataInfo_Location_Name(phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.UpdateFallback_WeatherDataInfo_Location_Region(phase);
                    }
                }
            }
            private void Update_WeatherDataInfo_Location_Localtime(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ForecastPage.xaml line 55
                    if (!isobj32TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Documents_Run_Text(this.obj32, obj, null);
                    }
                }
            }
            private void Update_WeatherDataInfo_Current_LastUpdated(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ForecastPage.xaml line 52
                    if (!isobj33TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Documents_Run_Text(this.obj33, obj, null);
                    }
                }
            }
            private void Update_WeatherDataInfo_Current_TempC(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ForecastPage.xaml line 43
                    if (!isobj34TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Documents_Run_Text(this.obj34, obj.ToString(), null);
                    }
                }
            }
            private void Update_WeatherDataInfo_Current_TempF(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ForecastPage.xaml line 45
                    if (!isobj35TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Documents_Run_Text(this.obj35, obj.ToString(), null);
                    }
                }
            }
            private void Update_WeatherDataInfo_Location_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ForecastPage.xaml line 36
                    if (!isobj36TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Documents_Run_Text(this.obj36, obj, null);
                    }
                }
            }
            private void Update_WeatherDataInfo_Location_Region(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ForecastPage.xaml line 37
                    if (!isobj37TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Documents_Run_Text(this.obj37, obj, null);
                    }
                }
            }

            private void UpdateFallback_WeatherDataInfo(int phase)
            {
                this.UpdateFallback_WeatherDataInfo_Current(phase);
                this.UpdateFallback_WeatherDataInfo_Location(phase);
            }

            private void UpdateFallback_WeatherDataInfo_Current(int phase)
            {
                this.UpdateFallback_WeatherDataInfo_Current_Condition(phase);
                this.UpdateFallback_WeatherDataInfo_Current_TempC(phase);
                this.UpdateFallback_WeatherDataInfo_Current_TempF(phase);
            }

            private void UpdateFallback_WeatherDataInfo_Current_Condition(int phase)
            {
                this.UpdateFallback_WeatherDataInfo_Current_Condition_Text(phase);
            }

            private void UpdateFallback_WeatherDataInfo_Current_Condition_Text(int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ForecastPage.xaml line 61
                    if (!isobj31TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Documents_Run_Text(this.obj31, "Weather_Description", null);
                    }
                }
            }

            private void UpdateFallback_WeatherDataInfo_Location(int phase)
            {
                this.UpdateFallback_WeatherDataInfo_Location_Name(phase);
                this.UpdateFallback_WeatherDataInfo_Location_Region(phase);
            }

            private void UpdateFallback_WeatherDataInfo_Current_TempC(int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ForecastPage.xaml line 43
                    if (!isobj34TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Documents_Run_Text(this.obj34, "99", null);
                    }
                }
            }

            private void UpdateFallback_WeatherDataInfo_Current_TempF(int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ForecastPage.xaml line 45
                    if (!isobj35TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Documents_Run_Text(this.obj35, "99", null);
                    }
                }
            }

            private void UpdateFallback_WeatherDataInfo_Location_Name(int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ForecastPage.xaml line 36
                    if (!isobj36TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Documents_Run_Text(this.obj36, "Calgary", null);
                    }
                }
            }

            private void UpdateFallback_WeatherDataInfo_Location_Region(int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ForecastPage.xaml line 37
                    if (!isobj37TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Documents_Run_Text(this.obj37, "Alberta", null);
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class ForecastPage_obj1_BindingsTracking
            {
                private global::System.WeakReference<ForecastPage_obj1_Bindings> weakRefToBindingObj; 

                public ForecastPage_obj1_BindingsTracking(ForecastPage_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<ForecastPage_obj1_Bindings>(obj);
                }

                public ForecastPage_obj1_Bindings TryGetBindingObject()
                {
                    ForecastPage_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_WeatherDataInfo(null);
                    UpdateChildListeners_WeatherDataInfo_Current_Condition(null);
                }

                public void PropertyChanged_WeatherDataInfo(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    ForecastPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::AttireApp.Models.WeatherDataModel obj = sender as global::AttireApp.Models.WeatherDataModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_WeatherDataInfo_Forecast(obj.Forecast, DATA_CHANGED);
                                bindings.Update_WeatherDataInfo_Current(obj.Current, DATA_CHANGED);
                                bindings.Update_WeatherDataInfo_Location(obj.Location, DATA_CHANGED);
                            }
                            else
                            {
                                bindings.UpdateFallback_WeatherDataInfo_Current(DATA_CHANGED);
                                bindings.UpdateFallback_WeatherDataInfo_Location(DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Forecast":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_WeatherDataInfo_Forecast(obj.Forecast, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Current":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_WeatherDataInfo_Current(obj.Current, DATA_CHANGED);
                                    }
                                    else
                                    {
                                        bindings.UpdateFallback_WeatherDataInfo_Current(DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Location":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_WeatherDataInfo_Location(obj.Location, DATA_CHANGED);
                                    }
                                    else
                                    {
                                        bindings.UpdateFallback_WeatherDataInfo_Location(DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::AttireApp.Models.WeatherDataModel cache_WeatherDataInfo = null;
                public void UpdateChildListeners_WeatherDataInfo(global::AttireApp.Models.WeatherDataModel obj)
                {
                    if (obj != cache_WeatherDataInfo)
                    {
                        if (cache_WeatherDataInfo != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_WeatherDataInfo).PropertyChanged -= PropertyChanged_WeatherDataInfo;
                            cache_WeatherDataInfo = null;
                        }
                        if (obj != null)
                        {
                            cache_WeatherDataInfo = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_WeatherDataInfo;
                        }
                    }
                }
                public void PropertyChanged_WeatherDataInfo_Current_Condition(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    ForecastPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::AttireApp.API.Condition obj = sender as global::AttireApp.API.Condition;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_WeatherDataInfo_Current_Condition_Text(obj.Text, DATA_CHANGED);
                            }
                            else
                            {
                                bindings.UpdateFallback_WeatherDataInfo_Current_Condition_Text(DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Text":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_WeatherDataInfo_Current_Condition_Text(obj.Text, DATA_CHANGED);
                                    }
                                    else
                                    {
                                        bindings.UpdateFallback_WeatherDataInfo_Current_Condition_Text(DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::AttireApp.API.Condition cache_WeatherDataInfo_Current_Condition = null;
                public void UpdateChildListeners_WeatherDataInfo_Current_Condition(global::AttireApp.API.Condition obj)
                {
                    if (obj != cache_WeatherDataInfo_Current_Condition)
                    {
                        if (cache_WeatherDataInfo_Current_Condition != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_WeatherDataInfo_Current_Condition).PropertyChanged -= PropertyChanged_WeatherDataInfo_Current_Condition;
                            cache_WeatherDataInfo_Current_Condition = null;
                        }
                        if (obj != null)
                        {
                            cache_WeatherDataInfo_Current_Condition = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_WeatherDataInfo_Current_Condition;
                        }
                    }
                }
            }
        }

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // ForecastPage.xaml line 209
                {
                    global::Microsoft.UI.Xaml.Controls.Button element2 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)element2).Click += this.HomePage_Click;
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // ForecastPage.xaml line 1
                {                    
                    global::Microsoft.UI.Xaml.Controls.Page element1 = (global::Microsoft.UI.Xaml.Controls.Page)target;
                    ForecastPage_obj1_Bindings bindings = new ForecastPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

