<Page x:ConnectionId='1'
    x:Class="AttireApp.HomePage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:AttireApp"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewmodels="using:AttireApp.Models.ViewModels"
    xmlns:datamodels="using:AttireApp.Models.DataModels"
    xmlns:toolkit="using:Uno.UI.Toolkit"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

    <!-- HERE is where you select the class that you want to bind, all member variables/functions will be accessible -->
    <!-- viewmodels:[enter the class to bind] x:Name="[the name you will use in this file to refer to that class]"-->
    <Page.DataContext>
        <viewmodels:HomeViewModel x:ConnectionId='2' x:Name="ViewModel" />
    </Page.DataContext>
    
    <ScrollViewer VerticalScrollBarVisibility="Auto">
        <Grid toolkit:VisibleBoundsPadding.PaddingMask="All" Padding="12">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            
            
            <!--##############-->
            <!-- Title - City -->
            <!--##############-->
            <StackPanel Orientation="Horizontal" Grid.Row="0">
                <TextBlock x:ConnectionId='9'                                                                  Style="{StaticResource HeaderTextBlockStyle}"/>
                <TextBlock Text="," Margin="0,0,10,0"  Style="{StaticResource HeaderTextBlockStyle}"/>
                <TextBlock x:ConnectionId='10'                                                                    Style="{StaticResource HeaderTextBlockStyle}"/>
            </StackPanel>

            <!-- You can access all the current weather data by binding to 'ViewModel.WeatherData.Current.[Specify what you want to show here] -->
            <!-- Ex. Text="{x:Bind ViewModel.WeatherData.Current.TempC, Mode=OneWay}" ; will show the current temperature in celcius -->
            <!-- Look at the Current.cs class to see everything thats available to bind through current -->
            <!-- Can also remove Current from your path and choose 'Location', 'Forecast' or 'Alerts' to access different data -->
            <!-- Take a look at the 'RootWeatherData.cs' class to see what can be accessed through the weatherData property -->
            
            <!-- By default x:Bind set the mode to "OneTime" this prevents the data/UI from being updated if it is changed -->
            <!-- We have to manual set it to "OneWay" binding; only goes from Backend to Frontend, ie. we want to show the current weather -->
            <!-- or to "TwoWay"; we want to read in data from the UI into a backend property, reading in the username/password -->

            <!-- To create your own properties that can be displayed take a look at HomeViewModel for info -->
            <StackPanel Grid.Row="2" Orientation="Vertical">
                <TextBlock x:ConnectionId='5'                                                  />
                <TextBox x:ConnectionId='6' PlaceholderText="Type in here for two way binding"                                                        />
                <TextBlock x:ConnectionId='7' Grid.Row="2"                                                         />
                <Button x:ConnectionId='8' Content="Click to See TwoWay Bind"                             />
            </StackPanel>


            <StackPanel Orientation="Horizontal" Grid.Row="1">
                <!-- Settings Button -->
                <Button x:ConnectionId='3' Content="Settings"                            HorizontalAlignment="Right" VerticalAlignment="Top" 
                    Height="40" Width="300" Margin="10, 10, 10, 10"/>

                <!-- ForecastButton -->
                <Button x:ConnectionId='4' Content="Forecast"                            HorizontalAlignment="Left" VerticalAlignment="Bottom" 
                    Height="40" Width="300" Margin="10, 10, 10, 10"/>

            </StackPanel>
        </Grid>
    </ScrollViewer>
</Page>

