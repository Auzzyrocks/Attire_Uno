#pragma checksum "C:\Users\shoulau\Source\Repos\attire_uno2\AttireApp\AttireApp\AttireApp.Shared\SettingsPage.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "7636A30E97AA93F0B4D434A412BBF2685A044F32196CF41B115C2EAAC2DEE653"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AttireApp
{
    partial class SettingsPage : 
        global::Microsoft.UI.Xaml.Controls.Page, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Microsoft_UI_Xaml_Controls_Primitives_Selector_SelectedItem(global::Microsoft.UI.Xaml.Controls.Primitives.Selector obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.SelectedItem = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Microsoft.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Microsoft_UI_Xaml_UIElement_Visibility(global::Microsoft.UI.Xaml.UIElement obj, global::Microsoft.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(global::Microsoft.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class SettingsPage_obj1_Bindings :
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            ISettingsPage_Bindings
        {
            private global::AttireApp.SettingsPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Microsoft.UI.Xaml.Controls.ComboBox obj5;
            private global::Microsoft.UI.Xaml.Controls.ComboBox obj6;
            private global::Microsoft.UI.Xaml.Controls.ComboBox obj7;
            private global::Microsoft.UI.Xaml.Controls.Border obj11;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj12;
            private global::Microsoft.UI.Xaml.Shapes.Rectangle obj13;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj5SelectedItemDisabled = false;
            private static bool isobj5ItemsSourceDisabled = false;
            private static bool isobj6SelectedItemDisabled = false;
            private static bool isobj6ItemsSourceDisabled = false;
            private static bool isobj7SelectedItemDisabled = false;
            private static bool isobj7ItemsSourceDisabled = false;
            private static bool isobj11VisibilityDisabled = false;
            private static bool isobj12TextDisabled = false;
            private static bool isobj12VisibilityDisabled = false;
            private static bool isobj13VisibilityDisabled = false;

            private SettingsPage_obj1_BindingsTracking bindingsTracking;

            public SettingsPage_obj1_Bindings()
            {
                this.bindingsTracking = new SettingsPage_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 36 && columnNumber == 69)
                {
                    isobj5SelectedItemDisabled = true;
                }
                else if (lineNumber == 37 && columnNumber == 27)
                {
                    isobj5ItemsSourceDisabled = true;
                }
                else if (lineNumber == 41 && columnNumber == 83)
                {
                    isobj6SelectedItemDisabled = true;
                }
                else if (lineNumber == 42 && columnNumber == 27)
                {
                    isobj6ItemsSourceDisabled = true;
                }
                else if (lineNumber == 46 && columnNumber == 82)
                {
                    isobj7SelectedItemDisabled = true;
                }
                else if (lineNumber == 47 && columnNumber == 27)
                {
                    isobj7ItemsSourceDisabled = true;
                }
                else if (lineNumber == 27 && columnNumber == 73)
                {
                    isobj11VisibilityDisabled = true;
                }
                else if (lineNumber == 30 && columnNumber == 93)
                {
                    isobj12TextDisabled = true;
                }
                else if (lineNumber == 31 && columnNumber == 32)
                {
                    isobj12VisibilityDisabled = true;
                }
                else if (lineNumber == 28 && columnNumber == 118)
                {
                    isobj13VisibilityDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 5: // SettingsPage.xaml line 36
                        this.obj5 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ComboBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_5(this.obj5);
                        break;
                    case 6: // SettingsPage.xaml line 41
                        this.obj6 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ComboBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_6(this.obj6);
                        break;
                    case 7: // SettingsPage.xaml line 46
                        this.obj7 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ComboBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_7(this.obj7);
                        break;
                    case 11: // SettingsPage.xaml line 27
                        this.obj11 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Border>(target);
                        break;
                    case 12: // SettingsPage.xaml line 30
                        this.obj12 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    case 13: // SettingsPage.xaml line 28
                        this.obj13 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Shapes.Rectangle>(target);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // ISettingsPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::AttireApp.SettingsPage>(newDataRoot);
                    return true;
                }
                return false;
            }

            public void Activated(object obj, global::Microsoft.UI.Xaml.WindowActivatedEventArgs data)
            {
                this.Initialize();
            }

            public void Loading(global::Microsoft.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::AttireApp.SettingsPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel(obj.ViewModel, phase);
                    }
                }
            }
            private void Update_ViewModel(global::AttireApp.Models.ViewModels.SettingsViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_LocationSelected(obj.LocationSelected, phase);
                        this.Update_ViewModel_LocationOptions(obj.LocationOptions, phase);
                        this.Update_ViewModel_WarmthPreferenceSelectedString(obj.WarmthPreferenceSelectedString, phase);
                        this.Update_ViewModel_WarmthPreferenceOptions(obj.WarmthPreferenceOptions, phase);
                        this.Update_ViewModel_TempUnitSelectedString(obj.TempUnitSelectedString, phase);
                        this.Update_ViewModel_TempUnitPrefOptions(obj.TempUnitPrefOptions, phase);
                        this.Update_ViewModel_IsSavedChanges(obj.IsSavedChanges, phase);
                        this.Update_ViewModel_SavedChangesMsg(obj.SavedChangesMsg, phase);
                    }
                }
            }
            private void Update_ViewModel_LocationSelected(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // SettingsPage.xaml line 36
                    if (!isobj5SelectedItemDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_Selector_SelectedItem(this.obj5, obj, null);
                    }
                }
            }
            private void Update_ViewModel_LocationOptions(global::System.Collections.ObjectModel.ObservableCollection<global::System.String> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_LocationOptions(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // SettingsPage.xaml line 36
                    if (!isobj5ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj5, obj, null);
                    }
                }
            }
            private void Update_ViewModel_WarmthPreferenceSelectedString(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // SettingsPage.xaml line 41
                    if (!isobj6SelectedItemDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_Selector_SelectedItem(this.obj6, obj, null);
                    }
                }
            }
            private void Update_ViewModel_WarmthPreferenceOptions(global::System.Collections.ObjectModel.ObservableCollection<global::System.String> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_WarmthPreferenceOptions(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // SettingsPage.xaml line 41
                    if (!isobj6ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj6, obj, null);
                    }
                }
            }
            private void Update_ViewModel_TempUnitSelectedString(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // SettingsPage.xaml line 46
                    if (!isobj7SelectedItemDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_Selector_SelectedItem(this.obj7, obj, null);
                    }
                }
            }
            private void Update_ViewModel_TempUnitPrefOptions(global::System.Collections.ObjectModel.ObservableCollection<global::System.String> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_TempUnitPrefOptions(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // SettingsPage.xaml line 46
                    if (!isobj7ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj7, obj, null);
                    }
                }
            }
            private void Update_ViewModel_IsSavedChanges(global::System.Boolean obj, int phase)
            {
                if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                {
                    this.Update_ViewModel_IsSavedChanges_Cast_IsSavedChanges_To_Visibility(obj ? global::Microsoft.UI.Xaml.Visibility.Visible : global::Microsoft.UI.Xaml.Visibility.Collapsed, phase);
                }
            }
            private void Update_ViewModel_IsSavedChanges_Cast_IsSavedChanges_To_Visibility(global::Microsoft.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // SettingsPage.xaml line 27
                    if (!isobj11VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_UIElement_Visibility(this.obj11, obj);
                    }
                    // SettingsPage.xaml line 30
                    if (!isobj12VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_UIElement_Visibility(this.obj12, obj);
                    }
                    // SettingsPage.xaml line 28
                    if (!isobj13VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_UIElement_Visibility(this.obj13, obj);
                    }
                }
            }
            private void Update_ViewModel_SavedChangesMsg(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // SettingsPage.xaml line 30
                    if (!isobj12TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj12, obj, null);
                    }
                }
            }
            private void UpdateTwoWay_5_SelectedItem()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.LocationSelected = (global::System.String)this.obj5.SelectedItem;
                        }
                    }
                }
            }
            private void UpdateTwoWay_5_ItemsSource()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.LocationOptions = (global::System.Collections.ObjectModel.ObservableCollection<global::System.String>)this.obj5.ItemsSource;
                        }
                    }
                }
            }
            private void UpdateTwoWay_6_SelectedItem()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.WarmthPreferenceSelectedString = (global::System.String)this.obj6.SelectedItem;
                        }
                    }
                }
            }
            private void UpdateTwoWay_6_ItemsSource()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.WarmthPreferenceOptions = (global::System.Collections.ObjectModel.ObservableCollection<global::System.String>)this.obj6.ItemsSource;
                        }
                    }
                }
            }
            private void UpdateTwoWay_7_SelectedItem()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.TempUnitSelectedString = (global::System.String)this.obj7.SelectedItem;
                        }
                    }
                }
            }
            private void UpdateTwoWay_7_ItemsSource()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.TempUnitPrefOptions = (global::System.Collections.ObjectModel.ObservableCollection<global::System.String>)this.obj7.ItemsSource;
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class SettingsPage_obj1_BindingsTracking
            {
                private global::System.WeakReference<SettingsPage_obj1_Bindings> weakRefToBindingObj; 

                public SettingsPage_obj1_BindingsTracking(SettingsPage_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<SettingsPage_obj1_Bindings>(obj);
                }

                public SettingsPage_obj1_Bindings TryGetBindingObject()
                {
                    SettingsPage_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_ViewModel(null);
                    UpdateChildListeners_ViewModel_LocationOptions(null);
                    UpdateChildListeners_ViewModel_WarmthPreferenceOptions(null);
                    UpdateChildListeners_ViewModel_TempUnitPrefOptions(null);
                }

                public void PropertyChanged_ViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    SettingsPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::AttireApp.Models.ViewModels.SettingsViewModel obj = sender as global::AttireApp.Models.ViewModels.SettingsViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_LocationSelected(obj.LocationSelected, DATA_CHANGED);
                                bindings.Update_ViewModel_LocationOptions(obj.LocationOptions, DATA_CHANGED);
                                bindings.Update_ViewModel_WarmthPreferenceSelectedString(obj.WarmthPreferenceSelectedString, DATA_CHANGED);
                                bindings.Update_ViewModel_WarmthPreferenceOptions(obj.WarmthPreferenceOptions, DATA_CHANGED);
                                bindings.Update_ViewModel_TempUnitSelectedString(obj.TempUnitSelectedString, DATA_CHANGED);
                                bindings.Update_ViewModel_TempUnitPrefOptions(obj.TempUnitPrefOptions, DATA_CHANGED);
                                bindings.Update_ViewModel_IsSavedChanges(obj.IsSavedChanges, DATA_CHANGED);
                                bindings.Update_ViewModel_SavedChangesMsg(obj.SavedChangesMsg, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "LocationSelected":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_LocationSelected(obj.LocationSelected, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "LocationOptions":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_LocationOptions(obj.LocationOptions, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "WarmthPreferenceSelectedString":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_WarmthPreferenceSelectedString(obj.WarmthPreferenceSelectedString, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "WarmthPreferenceOptions":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_WarmthPreferenceOptions(obj.WarmthPreferenceOptions, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "TempUnitSelectedString":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_TempUnitSelectedString(obj.TempUnitSelectedString, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "TempUnitPrefOptions":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_TempUnitPrefOptions(obj.TempUnitPrefOptions, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsSavedChanges":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_IsSavedChanges(obj.IsSavedChanges, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SavedChangesMsg":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SavedChangesMsg(obj.SavedChangesMsg, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::AttireApp.Models.ViewModels.SettingsViewModel cache_ViewModel = null;
                public void UpdateChildListeners_ViewModel(global::AttireApp.Models.ViewModels.SettingsViewModel obj)
                {
                    if (obj != cache_ViewModel)
                    {
                        if (cache_ViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel).PropertyChanged -= PropertyChanged_ViewModel;
                            cache_ViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_LocationOptions(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    SettingsPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::System.String> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::System.String>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_ViewModel_LocationOptions(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    SettingsPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::System.String> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::System.String>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::System.String> cache_ViewModel_LocationOptions = null;
                public void UpdateChildListeners_ViewModel_LocationOptions(global::System.Collections.ObjectModel.ObservableCollection<global::System.String> obj)
                {
                    if (obj != cache_ViewModel_LocationOptions)
                    {
                        if (cache_ViewModel_LocationOptions != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_LocationOptions).PropertyChanged -= PropertyChanged_ViewModel_LocationOptions;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_ViewModel_LocationOptions).CollectionChanged -= CollectionChanged_ViewModel_LocationOptions;
                            cache_ViewModel_LocationOptions = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_LocationOptions = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_LocationOptions;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_ViewModel_LocationOptions;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_WarmthPreferenceOptions(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    SettingsPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::System.String> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::System.String>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_ViewModel_WarmthPreferenceOptions(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    SettingsPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::System.String> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::System.String>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::System.String> cache_ViewModel_WarmthPreferenceOptions = null;
                public void UpdateChildListeners_ViewModel_WarmthPreferenceOptions(global::System.Collections.ObjectModel.ObservableCollection<global::System.String> obj)
                {
                    if (obj != cache_ViewModel_WarmthPreferenceOptions)
                    {
                        if (cache_ViewModel_WarmthPreferenceOptions != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_WarmthPreferenceOptions).PropertyChanged -= PropertyChanged_ViewModel_WarmthPreferenceOptions;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_ViewModel_WarmthPreferenceOptions).CollectionChanged -= CollectionChanged_ViewModel_WarmthPreferenceOptions;
                            cache_ViewModel_WarmthPreferenceOptions = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_WarmthPreferenceOptions = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_WarmthPreferenceOptions;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_ViewModel_WarmthPreferenceOptions;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_TempUnitPrefOptions(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    SettingsPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::System.String> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::System.String>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_ViewModel_TempUnitPrefOptions(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    SettingsPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::System.String> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::System.String>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::System.String> cache_ViewModel_TempUnitPrefOptions = null;
                public void UpdateChildListeners_ViewModel_TempUnitPrefOptions(global::System.Collections.ObjectModel.ObservableCollection<global::System.String> obj)
                {
                    if (obj != cache_ViewModel_TempUnitPrefOptions)
                    {
                        if (cache_ViewModel_TempUnitPrefOptions != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_TempUnitPrefOptions).PropertyChanged -= PropertyChanged_ViewModel_TempUnitPrefOptions;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_ViewModel_TempUnitPrefOptions).CollectionChanged -= CollectionChanged_ViewModel_TempUnitPrefOptions;
                            cache_ViewModel_TempUnitPrefOptions = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_TempUnitPrefOptions = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_TempUnitPrefOptions;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_ViewModel_TempUnitPrefOptions;
                        }
                    }
                }
                public void RegisterTwoWayListener_5(global::Microsoft.UI.Xaml.Controls.ComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedItemProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_5_SelectedItem();
                        }
                    });
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.ItemsControl.ItemsSourceProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_5_ItemsSource();
                        }
                    });
                }
                public void RegisterTwoWayListener_6(global::Microsoft.UI.Xaml.Controls.ComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedItemProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_6_SelectedItem();
                        }
                    });
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.ItemsControl.ItemsSourceProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_6_ItemsSource();
                        }
                    });
                }
                public void RegisterTwoWayListener_7(global::Microsoft.UI.Xaml.Controls.ComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedItemProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_7_SelectedItem();
                        }
                    });
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.ItemsControl.ItemsSourceProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_7_ItemsSource();
                        }
                    });
                }
            }
        }

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // SettingsPage.xaml line 15
                {
                    this.ViewModel = global::WinRT.CastExtensions.As<global::AttireApp.Models.ViewModels.SettingsViewModel>(target);
                }
                break;
            case 3: // SettingsPage.xaml line 22
                {
                    global::Microsoft.UI.Xaml.Controls.Button element3 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)element3).Click += this.HomePage_Click;
                }
                break;
            case 4: // SettingsPage.xaml line 25
                {
                    this.Msg = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Canvas>(target);
                }
                break;
            case 5: // SettingsPage.xaml line 36
                {
                    this.Combo_Location = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ComboBox>(target);
                }
                break;
            case 6: // SettingsPage.xaml line 41
                {
                    this.Combo_WarmthPref = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ComboBox>(target);
                }
                break;
            case 7: // SettingsPage.xaml line 46
                {
                    this.Combo_TempUnits = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ComboBox>(target);
                }
                break;
            case 8: // SettingsPage.xaml line 50
                {
                    global::Microsoft.UI.Xaml.Controls.Button element8 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)element8).Click += this.ForgotPasswordPage_Click;
                }
                break;
            case 9: // SettingsPage.xaml line 53
                {
                    global::Microsoft.UI.Xaml.Controls.Button element9 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)element9).Click += this.ApplySettings_Click;
                }
                break;
            case 10: // SettingsPage.xaml line 56
                {
                    global::Microsoft.UI.Xaml.Controls.Button element10 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)element10).Click += this.Logout_Click;
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // SettingsPage.xaml line 1
                {                    
                    global::Microsoft.UI.Xaml.Controls.Page element1 = (global::Microsoft.UI.Xaml.Controls.Page)target;
                    SettingsPage_obj1_Bindings bindings = new SettingsPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

